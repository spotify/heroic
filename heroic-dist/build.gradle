apply plugin: 'com.google.protobuf'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

mainClassName = 'com.spotify.heroic.HeroicService'

processResources {
    expand version: version, commit: gitCommit
}

shadowJar {
    classifier 'shaded'
    zip64 true

    append 'META-INF/services/org.eclipse.jetty.http.HttpFieldPreEncoder'
    // required for lucene
    append 'META-INF/services/org.apache.lucene.codecs.Codec'
    append 'META-INF/services/org.apache.lucene.codecs.DocValuesFormat'
    append 'META-INF/services/org.apache.lucene.codecs.PostingsFormat'
    append 'META-INF/services/org.apache.lucene.analysis.util.CharFilterFactory'
    append 'META-INF/services/org.apache.lucene.analysis.util.TokenFilterFactory'
    append 'META-INF/services/org.apache.lucene.analysis.util.TokenizerFactory'
}

dependencies {
    api project(':heroic-core')
    api project(':heroic-component')
    api project(':heroic-metric-datastax')
    api project(':heroic-metric-bigtable')
    api project(':heroic-metric-memory')
    api project(':heroic-metadata-elasticsearch')
    api project(':heroic-metadata-memory')
    api project(':heroic-suggest-elasticsearch')
    api project(':heroic-suggest-memory')
    api project(':heroic-discovery-simple')
    api project(':heroic-aggregation-simple')
    api project(':heroic-aggregation-cardinality')
    api project(':heroic-consumer-kafka')
    api project(':heroic-consumer-collectd')
    api project(':heroic-consumer-pubsub')
    api project(':heroic-rpc-grpc')
    api project(':heroic-rpc-jvm')
    api project(':heroic-statistics-semantic')
    api project(':heroic-elasticsearch-utils')
    api project(':heroic-usage-tracking-disabled')
    api project(':heroic-usage-tracking-google-analytics')

    implementation 'com.datastax.cassandra:cassandra-driver-core'
    implementation 'org.apache.logging.log4j:log4j-core'
    implementation 'org.apache.logging.log4j:log4j-1.2-api'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl'
    implementation 'org.slf4j:jcl-over-slf4j'
    implementation 'org.slf4j:jul-to-slf4j'
    implementation 'args4j:args4j'
    implementation 'com.google.guava:guava'
    implementation 'eu.toolchain.async:tiny-async-core'
    implementation 'jline:jline:2.12'
    implementation 'com.google.protobuf:protobuf-java'

    testImplementation project(':heroic-test')
    testImplementation 'org.hamcrest:java-hamcrest'
    testImplementation 'com.google.cloud:google-cloud-pubsub'
    testImplementation 'io.grpc:grpc-netty'
    testImplementation 'com.addthis:stream-lib'
    testImplementation 'net.jcip:jcip-annotations:1.0'
    testAnnotationProcessor 'net.jcip:jcip-annotations:1.0'
}

description = 'Heroic: Self-Contained Distribution Project'
