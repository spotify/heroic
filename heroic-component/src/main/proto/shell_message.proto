/*
 * Copyright (c) 2019 Spotify AB.
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

syntax = "proto3";

package spotify.heroic.shell;
option java_package = "com.spotify.heroic.proto";

option optimize_for = SPEED;

message Acknowledge {
}

message CommandEvent {
    enum Event {
        DONE = 0;
        OUTPUT = 1;
        FLUSH = 2;
        REQUEST = 3;
    }

    Event event = 1;
    string data = 2;  // Only set for OUTPUT events
}

message CommandsResponse {
    message CommandDefinition {
        string name = 1;
        repeated string aliases = 2;
        string usage = 3;
    }

    repeated CommandDefinition commands = 1;
}

message EvaluateRequest {
    repeated string command = 1;
}

message FileEvent {
    enum Event {
        CLOSE = 0;
        FLUSH = 1;
        OPENED = 2;
    }

    int32 handle = 1;
    Event event = 2;
}

message FileStream {
    enum Type {
        INPUT = 0;
        OUTPUT = 1;
    }

    string path = 1;
    Type type = 2;
}

message FileRead {
    int32 handle = 1;
    int32 length = 2;
}

message FileReadResult {
    string data = 1;
}

message FileWrite {
    int32 handle = 1;
    string data = 2;
}

message Message {
    oneof type {
        Acknowledge acknowledge = 1;
        CommandEvent command_event = 2;
        CommandsResponse commands_response = 3;
        EvaluateRequest evaluate_request = 4;
        FileEvent file_event = 5;
        FileStream file_stream = 6;
        FileRead file_read = 7;
        FileReadResult file_read_result = 8;
        FileWrite file_write = 9;
    }
}
