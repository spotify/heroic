<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.spotify.heroic</groupId>
  <artifactId>heroic-parent</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Heroic: Parent Project</name>

  <modules>
    <module>heroic-component</module>
    <module>heroic-elasticsearch-utils</module>
    <module>heroic-elasticsearch-test</module>
    <module>heroic-core</module>
    <module>heroic-test-base</module>
    <module>heroic-test-it</module>
    <module>heroic-shell</module>
    <module>heroic-parser</module>
    <module>heroic-all</module>
    <module>metric/datastax</module>
    <module>metric/bigtable</module>
    <module>metric/memory</module>
    <module>metadata/elasticsearch</module>
    <module>metadata/memory</module>
    <module>suggest/elasticsearch</module>
    <module>suggest/memory</module>
    <module>discovery/simple</module>
    <module>aggregation/simple</module>
    <module>aggregation/cardinality</module>
    <module>consumer/kafka</module>
    <module>consumer/collectd</module>
    <module>rpc/nativerpc</module>
    <module>rpc/grpc</module>
    <module>rpc/jvm</module>
    <module>heroic-dist</module>
    <module>statistics/semantic</module>
  </modules>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <jersey.version>2.13</jersey.version>
    <jackson.version>2.7.4</jackson.version>
    <hk2.version>2.3.0</hk2.version>
    <jetty.version>9.3.7.v20160115</jetty.version>
    <lucene.version>5.4.1</lucene.version>
    <datastax.version>3.0.2</datastax.version>
    <semantic-metrics.version>0.2.3</semantic-metrics.version>
    <netty.version>4.1.0.CR3</netty.version>
    <tiny-async.version>1.8.0</tiny-async.version>
    <tiny-serializer.version>1.4.5</tiny-serializer.version>
    <antlr.version>4.5</antlr.version>
    <log4j.version>2.2</log4j.version>
    <elasticsearch.version>2.2.1</elasticsearch.version>
    <joda-time.version>2.8.2</joda-time.version>
    <lombok.version>1.16.6</lombok.version>
    <findbugs.version>3.0.1</findbugs.version>
    <dagger.version>2.4</dagger.version>
    <slf4j.version>1.7.21</slf4j.version>
    <junit.version>4.12</junit.version>
  </properties>

  <profiles>
    <profile>
      <id>codecov</id>

      <activation>
        <property>
          <name>environment</name>
          <value>test</value>
        </property>
      </activation>

      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.7.6.201602180812</version>
            <configuration>
              <excludes>
                <exclude>**/Dagger*.class</exclude>
                <exclude>**/*_Factory.class</exclude>
                <exclude>**/*_Serializer.class</exclude>
              </excludes>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>report-coverage</id>

                <phase>verify</phase>

                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>integration-tests</id>

      <activation>
        <property>
          <name>environment</name>
          <value>test</value>
        </property>
      </activation>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>2.19.1</version>
            <configuration>
              <parallel>methods</parallel>
              <threadCount>10</threadCount>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>checkstyle</id>

      <activation>
        <property>
          <name>environment</name>
          <value>test</value>
        </property>
      </activation>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <version>2.13</version>
            <configuration>
              <configLocation>checkstyle.xml</configLocation>
              <consoleOutput>true</consoleOutput>
              <failOnViolation>true</failOnViolation>
              <failsOnError>true</failsOnError>
              <maxAllowedViolations>0</maxAllowedViolations>
              <propertyExpansion>basedir=${user.dir}</propertyExpansion>
            </configuration>
            <executions>
              <execution>
                <id>validate-checkstyle</id>

                <phase>validate</phase>

                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <failOnViolation>true</failOnViolation>
                  <failsOnError>true</failsOnError>
                </configuration>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>com.puppycrawl.tools</groupId>
                <artifactId>checkstyle</artifactId>
                <version>6.13</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>findbugs</id>

      <activation>
        <property>
          <name>environment</name>
          <value>test</value>
        </property>
      </activation>

      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>findbugs-maven-plugin</artifactId>
            <version>3.0.3</version>
            <configuration>
              <failOnError>true</failOnError>
              <effort>Max</effort>
              <threshold>High</threshold>
              <xmlOutput>true</xmlOutput>
            </configuration>
            <executions>
              <execution>
                <id>compile-findbugs-check</id>

                <phase>compile</phase>

                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>repackaged</id>

      <modules>
        <module>repackaged/bigtable</module>
      </modules>
    </profile>
  </profiles>

  <dependencies>
    <dependency>
      <groupId>com.google.dagger</groupId>
      <artifactId>dagger-compiler</artifactId>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <!-- heroic components -->
      <dependency>
        <groupId>com.spotify.heroic</groupId>
        <artifactId>heroic-component</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.spotify.heroic</groupId>
        <artifactId>heroic-parser</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.spotify.heroic</groupId>
        <artifactId>heroic-all</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.spotify.heroic</groupId>
        <artifactId>heroic-elasticsearch-utils</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.spotify.heroic</groupId>
        <artifactId>heroic-elasticsearch-test</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>com.spotify.heroic</groupId>
        <artifactId>heroic-test-base</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.spotify.heroic</groupId>
        <artifactId>heroic-test-it</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>com.spotify.heroic</groupId>
        <artifactId>heroic-core</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.spotify.heroic</groupId>
        <artifactId>heroic-shell</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>com.spotify.heroic.metric</groupId>
        <artifactId>heroic-metric-datastax</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.spotify.heroic.metric</groupId>
        <artifactId>heroic-metric-bigtable</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.spotify.heroic.metric</groupId>
        <artifactId>heroic-metric-memory</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.spotify.heroic.metadata</groupId>
        <artifactId>heroic-metadata-elasticsearch</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.spotify.heroic.metadata</groupId>
        <artifactId>heroic-metadata-memory</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.spotify.heroic.suggest</groupId>
        <artifactId>heroic-suggest-elasticsearch</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.spotify.heroic.suggest</groupId>
        <artifactId>heroic-suggest-memory</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.spotify.heroic.discovery</groupId>
        <artifactId>heroic-discovery-simple</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.spotify.heroic.aggregation</groupId>
        <artifactId>heroic-aggregation-simple</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.spotify.heroic.aggregation</groupId>
        <artifactId>heroic-aggregation-cardinality</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.spotify.heroic.consumer</groupId>
        <artifactId>heroic-consumer-kafka</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.spotify.heroic.consumer</groupId>
        <artifactId>heroic-consumer-collectd</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.spotify.heroic.statistics</groupId>
        <artifactId>heroic-statistics-semantic</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.spotify.heroic.rpc</groupId>
        <artifactId>heroic-rpc-nativerpc</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.spotify.heroic.rpc</groupId>
        <artifactId>heroic-rpc-grpc</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.spotify.heroic.rpc</groupId>
        <artifactId>heroic-rpc-jvm</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.spotify.heroic</groupId>
        <artifactId>heroic-dist</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>eu.toolchain.async</groupId>
        <artifactId>tiny-async-api</artifactId>
        <version>${tiny-async.version}</version>
      </dependency>
      <dependency>
        <groupId>eu.toolchain.async</groupId>
        <artifactId>tiny-async-core</artifactId>
        <version>${tiny-async.version}</version>
      </dependency>
      <dependency>
        <groupId>eu.toolchain.serializer</groupId>
        <artifactId>tiny-serializer-api</artifactId>
        <version>${tiny-serializer.version}</version>
      </dependency>
      <dependency>
        <groupId>eu.toolchain.serializer</groupId>
        <artifactId>tiny-serializer-core</artifactId>
        <version>${tiny-serializer.version}</version>
      </dependency>
      <dependency>
        <groupId>eu.toolchain.serializer</groupId>
        <artifactId>tiny-serializer-processor</artifactId>
        <version>${tiny-serializer.version}</version>
      </dependency>

      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>javax.inject</groupId>
        <artifactId>javax.inject</artifactId>
        <version>1</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>${findbugs.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>annotations</artifactId>
        <version>${findbugs.version}</version>

        <exclusions>
          <exclusion>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
          </exclusion>
          <exclusion>
            <groupId>net.jcip</groupId>
            <artifactId>jcip-annotations</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.3.2</version>
      </dependency>

      <dependency>
        <groupId>com.datastax.cassandra</groupId>
        <artifactId>cassandra-driver-core</artifactId>
        <classifier>shaded</classifier>
        <version>${datastax.version}</version>

        <exclusions>
          <exclusion>
            <groupId>io.netty</groupId>
            <artifactId>netty-handler</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- useful collections and utilities -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>19.0</version>
      </dependency>

      <dependency>
        <groupId>com.google.dagger</groupId>
        <artifactId>dagger</artifactId>
        <version>${dagger.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.dagger</groupId>
        <artifactId>dagger-compiler</artifactId>
        <version>${dagger.version}</version>
      </dependency>

      <!-- used by com.spotify.heroic.http
           This provides the core query API.
           We are using these later versions to support AsyncResponse and SSE. -->
      <dependency>
        <groupId>javax.mail</groupId>
        <artifactId>mail</artifactId>
        <version>1.4.7</version>
      </dependency>
      <!-- jersey -->
      <dependency>
        <groupId>org.glassfish.jersey.containers</groupId>
        <artifactId>jersey-container-servlet-core</artifactId>
        <version>${jersey.version}</version>

        <exclusions>
          <exclusion>
            <groupId>org.glassfish.hk2.external</groupId>
            <artifactId>javax.inject</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.containers</groupId>
        <artifactId>jersey-container-servlet</artifactId>
        <version>${jersey.version}</version>

        <exclusions>
          <exclusion>
            <groupId>org.glassfish.hk2.external</groupId>
            <artifactId>javax.inject</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.containers</groupId>
        <artifactId>jersey-container-jetty-http</artifactId>
        <version>${jersey.version}</version>

        <exclusions>
          <exclusion>
            <groupId>org.glassfish.hk2.external</groupId>
            <artifactId>javax.inject</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.core</groupId>
        <artifactId>jersey-server</artifactId>
        <version>${jersey.version}</version>

        <exclusions>
          <exclusion>
            <groupId>org.glassfish.hk2.external</groupId>
            <artifactId>javax.inject</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.core</groupId>
        <artifactId>jersey-client</artifactId>
        <version>${jersey.version}</version>
      </dependency>
      <!-- jetty -->
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-webapp</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-server</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-rewrite</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>3.1.0</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty.http2</groupId>
        <artifactId>http2-server</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.ws.rs</groupId>
        <artifactId>javax.ws.rs-api</artifactId>
        <version>2.0.1</version>
      </dependency>
      <!-- netty -->
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-transport</artifactId>
        <version>${netty.version}</version>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-transport-native-epoll</artifactId>
        <version>${netty.version}</version>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-codec</artifactId>
        <version>${netty.version}</version>
      </dependency>

      <!-- JSON implementation for Jersey -->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-yaml</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-jdk8</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <!-- Jersey auto-initializes this for some reason. -->
      <dependency>
        <groupId>org.apache.onami</groupId>
        <artifactId>org.apache.onami.scheduler</artifactId>
        <version>1.4.0</version>
      </dependency>
      <!-- used by: com.spotify.heroic.consumer.kafka -->
      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka_2.10</artifactId>
        <version>0.8.1.1</version>
        <exclusions>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <!-- used by com.spotify.heroic.metadata.elasticsearch
           TODO: break out -->
      <dependency>
        <groupId>org.elasticsearch</groupId>
        <artifactId>elasticsearch</artifactId>
        <version>${elasticsearch.version}</version>
      </dependency>
       <!-- Added due to deleteByQuery API being deprecated since ES 2 -->
      <dependency>
        <groupId>org.elasticsearch.plugin</groupId>
        <artifactId>delete-by-query</artifactId>
        <version>${elasticsearch.version}</version>
      </dependency>
      <!--  used by com.spotify.heroic.metadata.lucene -->
      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-core</artifactId>
        <version>${lucene.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-codecs</artifactId>
        <version>${lucene.version}</version>
      </dependency>
      <!-- graphing -->
      <dependency>
        <groupId>org.jfree</groupId>
        <artifactId>jfreechart</artifactId>
        <version>1.0.19</version>
      </dependency>
      <!-- logging -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-jdk14</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jul-to-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>${log4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-slf4j-impl</artifactId>
        <version>${log4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-api</artifactId>
        <version>${log4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-1.2-api</artifactId>
        <version>${log4j.version}</version>
      </dependency>

      <!-- shell -->
      <dependency>
        <groupId>args4j</groupId>
        <artifactId>args4j</artifactId>
        <version>2.33</version>
      </dependency>

      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>${joda-time.version}</version>
      </dependency>

      <!-- parsing -->
      <dependency>
        <groupId>org.antlr</groupId>
        <artifactId>antlr4-runtime</artifactId>
        <version>${antlr.version}</version>
      </dependency>

      <dependency>
        <groupId>org.antlr</groupId>
        <artifactId>antlr4</artifactId>
        <version>${antlr.version}</version>
        <scope>compile</scope>
      </dependency>

      <!-- testing -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>2.0.31-beta</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <showWarnings>true</showWarnings>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.19.1</version>
        <configuration>
        </configuration>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>2.4.3</version>
          <executions>
            <execution>
              <phase>package</phase>

              <goals>
                <goal>shade</goal>
              </goals>

              <configuration>
                <shadedArtifactAttached>true</shadedArtifactAttached>
                <shadedClassifierName>shaded</shadedClassifierName>
                <filters>
                  <filter>
                    <artifact>*:*</artifact>
                    <excludes>
                      <exclude>META-INF/*.SF</exclude>
                      <exclude>META-INF/*.DSA</exclude>
                      <exclude>META-INF/*.RSA</exclude>
                    </excludes>
                  </filter>
                </filters>
                <transformers>
                  <!-- required for lucene -->
                  <transformer
                      implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                    <resource>META-INF/services/org.apache.lucene.codecs.Codec</resource>
                  </transformer>
                  <transformer
                      implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                    <resource>META-INF/services/org.apache.lucene.codecs.DocValuesFormat</resource>
                  </transformer>
                  <transformer
                      implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                    <resource>META-INF/services/org.apache.lucene.codecs.PostingsFormat</resource>
                  </transformer>
                  <transformer
                      implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                    <resource>META-INF/services/org.apache.lucene.analysis.util.CharFilterFactory
                    </resource>
                  </transformer>
                  <transformer
                      implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                    <resource>META-INF/services/org.apache.lucene.analysis.util.TokenFilterFactory
                    </resource>
                  </transformer>
                  <transformer
                      implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                    <resource>META-INF/services/org.apache.lucene.analysis.util.TokenizerFactory
                    </resource>
                  </transformer>
                </transformers>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
