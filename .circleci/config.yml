version: 2.1

executors:
  java:
    docker:
      - image: circleci/openjdk:11
  ubuntu:
    # Due to remote docker limitations, some jobs require a machine image
    # https://circleci.com/docs/2.0/building-docker-images/#accessing-services
    machine:
      image: ubuntu-1604:202004-01

jobs:
  validate_branch:
    executor: java
    steps:
      # CircleCI has terrible support for filtering PRs/branches, this is a hacky workaround
      - run: ([[ $CIRCLE_PULL_REQUESTS == "" ]]) && echo $CIRCLE_BRANCH | grep -Evq "^(master)|([0-9]+\.[0-9]+\.[0-9]+)$" && echo "not a PR / branch to build" && circleci step halt || echo "will build"

  build:
    executor: java
    steps:
      - checkout
      # Restore gradle deps
      - restore_cache:
          keys:
            - gradle-cache-{{ checksum "build.gradle" }}
            - gradle-cache
      - run: ./gradlew assemble
      - save_cache:
          paths:
            - .gradle/
            - ~/.gradle/
          key: gradle-cache-{{ checksum "build.gradle" }}
      - persist_to_workspace:
          root: .
          paths:
            - '*/build'
            - '*/*/build'
            - '*/out'
            - '*/*/out'

  test:
    executor: ubuntu
    steps:
      - run:
          name: Install Java 11
          command: |
            sudo mkdir -p /usr/lib/jvm
            curl -s https://download.java.net/openjdk/jdk11/ri/openjdk-11+28_linux-x64_bin.tar.gz | sudo tar xfz - --directory /usr/lib/jvm
            sudo sh -c 'for bin in /usr/lib/jvm/jdk-11/bin/*; do update-alternatives --install /usr/bin/$(basename $bin) $(basename $bin) $bin 100; done'
            sudo sh -c 'for bin in /usr/lib/jvm/jdk-11/bin/*; do update-alternatives --set $(basename $bin) $bin; done'
      - checkout
      - restore_cache:
          keys:
            - gradle-cache-{{ checksum "build.gradle" }}
            - gradle-cache
      - attach_workspace:
          at: /tmp/workspace
      - run: cp -r /tmp/workspace/* ~/project/
      - run: ./gradlew --info check jacocoRootReport
      - run: 'bash <(curl -s https://codecov.io/bash)'

  docker_build:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - setup_remote_docker
      - run: docker build -t spotify/heroic .

  system_test:
    executor: ubuntu
    steps:
      - run: pyenv global 3.8.2
      - checkout
      - run: pip install -r system-tests/requirements.txt
      - run: cd system-tests && pytest

workflows:
  version: 2
  build_and_test:
    jobs:
      - validate_branch
      - build:
          requires:
            - validate_branch
      - test:
          requires:
            - build
            - validate_branch

      - docker_build:
          requires:
            - validate_branch

      - system_test:
          requires:
            - docker_build
            - validate_branch
